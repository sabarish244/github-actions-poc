@using DevOpsMetrics.Core.Models.Common
@model LeadTimeForChangesModel

@{
    string widgetImageName = "";
    string widgetName = "";
    if (Model.TargetDevOpsPlatform == DevOpsPlatform.AzureDevOps)
    {
        widgetImageName = "AzureDevops-icon.png";
        widgetName = "Azure DevOps";
    }
    else if (Model.TargetDevOpsPlatform == DevOpsPlatform.GitHub)
    {
        widgetImageName = "GitHub-icon.png";
        widgetName = "GitHub";
    }
    else
    {
        widgetImageName = "Unknown-icon.png";
        widgetName = "Unknown";
    }
}

@* HTML based on example at https://codepen.io/vmz/pen/GpKbjm*@
<div class="chartContainer vertical flat">
    @if (Model.IsProjectView)
    {
        <h4>Lead time for changes</h4>
    }
    else
    {
        <h4><img src="~/images/@widgetImageName" style="width:32px;" alt="Widget image name" />&nbsp; @widgetName - @Model.ProjectName</h4>
    }
    @if (Model.Exception != null)
    {
        <div style="height:100px">
            <span>This lead time for changes cannot be displayed</span><br />
            <span>There was an exception retreiving data from this <a href="@Model.ExceptionUrl" target="_blank">service request</a>.</span>
        </div>
    }
    else if (Model.RateLimitHit)
    {
        <div style="height:100px">
            <span>API rate limit has been reached, please try again later</span>
        </div>
    }
    else if (Model.PullRequests.Count == 0)
    {
        <div style="height:100px">
            <span>There is no data to display for this period</span>
        </div>
    }
    else
    {
        foreach (PullRequestModel item in Model.PullRequests)
        {
            <a href="@item.Url" target="_blank">
                <div class="progress-bar">
                    <div class="progress-track" title="PR #@item.PullRequestId branch @item.Branch had @item.Commits.Count commits over @item.Duration.TotalHours.ToString("0.0") hours">
                        <div class="progress-fill @item.Status">
                            <span>@item.DurationPercent.ToString("0")%</span>
                        </div>
                    </div>
                </div>
            </a>
        }
    }
</div>
<div class="metricSpan">
    <span style="font-size: 9pt;">Last @Model.MaxNumberOfItems completed pull requests shown, out of @Model.TotalItems pull requests over last @Model.NumberOfDays days</span>
</div>
@if (Model.RateLimitHit == false)
{
<div class="metricSpan">
    @*<b>Build time:</b><span> @Model.AverageBuildHours.ToString("0.0") hours</span><br />
        <b>Pull request time:</b><span> @Model.AveragePullRequestHours.ToString("0.0") hours</span><br />*@
    <b>Lead time for changes:</b><span> @Model.LeadTimeForChangesMetricDisplayMetric.ToString("0.0") @Model.LeadTimeForChangesMetricDisplayUnit</span><br />
    <b>Lead time for changes ranking:</b><span> @Model.LeadTimeForChangesMetricDescription</span><br />
        <b>Badge:</b> <img src="@Model.BadgeWithMetricURL" alt="Badge with metric image" />
</div>
}